<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.medilabosolutions</groupId>
		<artifactId>medilabo-solutions</artifactId>
		<version>0.0.2</version>		<!-- lookup parent from repository -->
	</parent>

	<groupId>com.medilabosolutions</groupId>
	<artifactId>patient-service</artifactId>
	<version>0.0.2</version>
	<name>patient-service</name>
	<packaging>jar</packaging>
	<description>microservice-back patient</description>
	

	<properties>
		<java.version>17</java.version>
		<start-class>com.medilabosolutions.PatientServiceApplication</start-class>
	</properties>

	<dependencies>
		<!-- mandatory to fetch application.properties from config-server-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<!-- to use reactive programmation contrary to spring web MVC-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<!-- springboot data -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-r2dbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<!-- enable connecting pool -->
		<dependency>
			<groupId>io.r2dbc</groupId>
			<artifactId>r2dbc-pool</artifactId>
			<version>1.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			
		</dependency>

		<!-- enable reactive driver for r2dbc-mysql -->
		<dependency>
			<groupId>io.asyncer</groupId>
			<artifactId>r2dbc-mysql</artifactId>
			<version>1.0.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>8.2.0</version>
			<scope>runtime</scope>
		</dependency>

		<!-- enable r2dbc dirver for h2 in test -->
		<dependency>
			<groupId>io.r2dbc</groupId>
			<artifactId>r2dbc-h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- enable validation for DTO -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- model mapper for DTO -->
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>3.1.1</version>
		</dependency>
	</dependencies>

	<!-- override version of r2dbc-pool to not have conflict -->
	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>com.netflix.servo</groupId>
				<artifactId>servo-core</artifactId>
				<version>0.5.3</version>
			</dependency>


			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>14.0.1</version>
			</dependency>


			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>6.0.11</version>
			</dependency>

			<dependency>
				<groupId>io.r2dbc</groupId>
				<artifactId>r2dbc-pool</artifactId>
				<version>1.0.1.RELEASE</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- jacoco report for test -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.10</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.medilabosolutions.PatientServiceApplication</mainClass>
					<layout>JAR</layout>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>